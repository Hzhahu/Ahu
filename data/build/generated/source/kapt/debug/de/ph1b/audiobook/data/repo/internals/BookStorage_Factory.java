// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.data.repo.internals;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class BookStorage_Factory implements Factory<BookStorage> {
  private final Provider<ChapterDao> chapterDaoProvider;

  private final Provider<BookMetaDataDao> metaDataDaoProvider;

  private final Provider<BookSettingsDao> bookSettingsDaoProvider;

  private final Provider<AppDb> appDbProvider;

  public BookStorage_Factory(
      Provider<ChapterDao> chapterDaoProvider,
      Provider<BookMetaDataDao> metaDataDaoProvider,
      Provider<BookSettingsDao> bookSettingsDaoProvider,
      Provider<AppDb> appDbProvider) {
    this.chapterDaoProvider = chapterDaoProvider;
    this.metaDataDaoProvider = metaDataDaoProvider;
    this.bookSettingsDaoProvider = bookSettingsDaoProvider;
    this.appDbProvider = appDbProvider;
  }

  @Override
  public BookStorage get() {
    return provideInstance(
        chapterDaoProvider, metaDataDaoProvider, bookSettingsDaoProvider, appDbProvider);
  }

  public static BookStorage provideInstance(
      Provider<ChapterDao> chapterDaoProvider,
      Provider<BookMetaDataDao> metaDataDaoProvider,
      Provider<BookSettingsDao> bookSettingsDaoProvider,
      Provider<AppDb> appDbProvider) {
    return new BookStorage(
        chapterDaoProvider.get(),
        metaDataDaoProvider.get(),
        bookSettingsDaoProvider.get(),
        appDbProvider.get());
  }

  public static BookStorage_Factory create(
      Provider<ChapterDao> chapterDaoProvider,
      Provider<BookMetaDataDao> metaDataDaoProvider,
      Provider<BookSettingsDao> bookSettingsDaoProvider,
      Provider<AppDb> appDbProvider) {
    return new BookStorage_Factory(
        chapterDaoProvider, metaDataDaoProvider, bookSettingsDaoProvider, appDbProvider);
  }

  public static BookStorage newBookStorage(
      ChapterDao chapterDao,
      BookMetaDataDao metaDataDao,
      BookSettingsDao bookSettingsDao,
      AppDb appDb) {
    return new BookStorage(chapterDao, metaDataDao, bookSettingsDao, appDb);
  }
}
