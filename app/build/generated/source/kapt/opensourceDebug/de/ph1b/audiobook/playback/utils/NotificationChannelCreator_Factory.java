// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.playback.utils;

import android.app.NotificationManager;
import android.content.Context;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class NotificationChannelCreator_Factory
    implements Factory<NotificationChannelCreator> {
  private final Provider<NotificationManager> notificationManagerProvider;

  private final Provider<Context> contextProvider;

  public NotificationChannelCreator_Factory(
      Provider<NotificationManager> notificationManagerProvider,
      Provider<Context> contextProvider) {
    this.notificationManagerProvider = notificationManagerProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public NotificationChannelCreator get() {
    return provideInstance(notificationManagerProvider, contextProvider);
  }

  public static NotificationChannelCreator provideInstance(
      Provider<NotificationManager> notificationManagerProvider,
      Provider<Context> contextProvider) {
    return new NotificationChannelCreator(notificationManagerProvider.get(), contextProvider.get());
  }

  public static NotificationChannelCreator_Factory create(
      Provider<NotificationManager> notificationManagerProvider,
      Provider<Context> contextProvider) {
    return new NotificationChannelCreator_Factory(notificationManagerProvider, contextProvider);
  }

  public static NotificationChannelCreator newNotificationChannelCreator(
      NotificationManager notificationManager, Context context) {
    return new NotificationChannelCreator(notificationManager, context);
  }
}
