// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.features.bookPlaying;

import dagger.MembersInjector;
import de.ph1b.audiobook.data.repo.BookRepository;
import de.ph1b.audiobook.data.repo.BookmarkRepo;
import de.ph1b.audiobook.playback.PlayStateManager;
import de.ph1b.audiobook.playback.PlayerController;
import de.ph1b.audiobook.playback.SleepTimer;
import javax.inject.Provider;

public final class BookPlayPresenter_MembersInjector implements MembersInjector<BookPlayPresenter> {
  private final Provider<BookRepository> bookRepositoryProvider;

  private final Provider<PlayerController> playerControllerProvider;

  private final Provider<PlayStateManager> playStateManagerProvider;

  private final Provider<SleepTimer> sleepTimerProvider;

  private final Provider<BookmarkRepo> bookmarkRepoProvider;

  public BookPlayPresenter_MembersInjector(
      Provider<BookRepository> bookRepositoryProvider,
      Provider<PlayerController> playerControllerProvider,
      Provider<PlayStateManager> playStateManagerProvider,
      Provider<SleepTimer> sleepTimerProvider,
      Provider<BookmarkRepo> bookmarkRepoProvider) {
    this.bookRepositoryProvider = bookRepositoryProvider;
    this.playerControllerProvider = playerControllerProvider;
    this.playStateManagerProvider = playStateManagerProvider;
    this.sleepTimerProvider = sleepTimerProvider;
    this.bookmarkRepoProvider = bookmarkRepoProvider;
  }

  public static MembersInjector<BookPlayPresenter> create(
      Provider<BookRepository> bookRepositoryProvider,
      Provider<PlayerController> playerControllerProvider,
      Provider<PlayStateManager> playStateManagerProvider,
      Provider<SleepTimer> sleepTimerProvider,
      Provider<BookmarkRepo> bookmarkRepoProvider) {
    return new BookPlayPresenter_MembersInjector(
        bookRepositoryProvider,
        playerControllerProvider,
        playStateManagerProvider,
        sleepTimerProvider,
        bookmarkRepoProvider);
  }

  @Override
  public void injectMembers(BookPlayPresenter instance) {
    injectBookRepository(instance, bookRepositoryProvider.get());
    injectPlayerController(instance, playerControllerProvider.get());
    injectPlayStateManager(instance, playStateManagerProvider.get());
    injectSleepTimer(instance, sleepTimerProvider.get());
    injectBookmarkRepo(instance, bookmarkRepoProvider.get());
  }

  public static void injectBookRepository(
      BookPlayPresenter instance, BookRepository bookRepository) {
    instance.bookRepository = bookRepository;
  }

  public static void injectPlayerController(
      BookPlayPresenter instance, PlayerController playerController) {
    instance.playerController = playerController;
  }

  public static void injectPlayStateManager(
      BookPlayPresenter instance, PlayStateManager playStateManager) {
    instance.playStateManager = playStateManager;
  }

  public static void injectSleepTimer(BookPlayPresenter instance, SleepTimer sleepTimer) {
    instance.sleepTimer = sleepTimer;
  }

  public static void injectBookmarkRepo(BookPlayPresenter instance, BookmarkRepo bookmarkRepo) {
    instance.bookmarkRepo = bookmarkRepo;
  }
}
