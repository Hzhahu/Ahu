// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.playback;

import dagger.internal.Factory;
import de.ph1b.audiobook.persistence.pref.Pref;
import javax.inject.Provider;

public final class SleepTimer_Factory implements Factory<SleepTimer> {
  private final Provider<PlayerController> playerControllerProvider;

  private final Provider<PlayStateManager> playStateManagerProvider;

  private final Provider<ShakeDetector> shakeDetectorProvider;

  private final Provider<Pref<Boolean>> shakeToResetPrefProvider;

  private final Provider<Pref<Integer>> sleepTimePrefProvider;

  public SleepTimer_Factory(
      Provider<PlayerController> playerControllerProvider,
      Provider<PlayStateManager> playStateManagerProvider,
      Provider<ShakeDetector> shakeDetectorProvider,
      Provider<Pref<Boolean>> shakeToResetPrefProvider,
      Provider<Pref<Integer>> sleepTimePrefProvider) {
    this.playerControllerProvider = playerControllerProvider;
    this.playStateManagerProvider = playStateManagerProvider;
    this.shakeDetectorProvider = shakeDetectorProvider;
    this.shakeToResetPrefProvider = shakeToResetPrefProvider;
    this.sleepTimePrefProvider = sleepTimePrefProvider;
  }

  @Override
  public SleepTimer get() {
    return provideInstance(
        playerControllerProvider,
        playStateManagerProvider,
        shakeDetectorProvider,
        shakeToResetPrefProvider,
        sleepTimePrefProvider);
  }

  public static SleepTimer provideInstance(
      Provider<PlayerController> playerControllerProvider,
      Provider<PlayStateManager> playStateManagerProvider,
      Provider<ShakeDetector> shakeDetectorProvider,
      Provider<Pref<Boolean>> shakeToResetPrefProvider,
      Provider<Pref<Integer>> sleepTimePrefProvider) {
    return new SleepTimer(
        playerControllerProvider.get(),
        playStateManagerProvider.get(),
        shakeDetectorProvider.get(),
        shakeToResetPrefProvider.get(),
        sleepTimePrefProvider.get());
  }

  public static SleepTimer_Factory create(
      Provider<PlayerController> playerControllerProvider,
      Provider<PlayStateManager> playStateManagerProvider,
      Provider<ShakeDetector> shakeDetectorProvider,
      Provider<Pref<Boolean>> shakeToResetPrefProvider,
      Provider<Pref<Integer>> sleepTimePrefProvider) {
    return new SleepTimer_Factory(
        playerControllerProvider,
        playStateManagerProvider,
        shakeDetectorProvider,
        shakeToResetPrefProvider,
        sleepTimePrefProvider);
  }

  public static SleepTimer newSleepTimer(
      PlayerController playerController,
      PlayStateManager playStateManager,
      ShakeDetector shakeDetector,
      Pref<Boolean> shakeToResetPref,
      Pref<Integer> sleepTimePref) {
    return new SleepTimer(
        playerController, playStateManager, shakeDetector, shakeToResetPref, sleepTimePref);
  }
}
