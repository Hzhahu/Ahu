// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.misc;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class MediaAnalyzer_Factory implements Factory<MediaAnalyzer> {
  private final Provider<DurationAnalyzer> exoPlayerDurationParserProvider;

  private final Provider<MetaDataAnalyzer> metaDataAnalyzerProvider;

  public MediaAnalyzer_Factory(
      Provider<DurationAnalyzer> exoPlayerDurationParserProvider,
      Provider<MetaDataAnalyzer> metaDataAnalyzerProvider) {
    this.exoPlayerDurationParserProvider = exoPlayerDurationParserProvider;
    this.metaDataAnalyzerProvider = metaDataAnalyzerProvider;
  }

  @Override
  public MediaAnalyzer get() {
    return provideInstance(exoPlayerDurationParserProvider, metaDataAnalyzerProvider);
  }

  public static MediaAnalyzer provideInstance(
      Provider<DurationAnalyzer> exoPlayerDurationParserProvider,
      Provider<MetaDataAnalyzer> metaDataAnalyzerProvider) {
    return new MediaAnalyzer(exoPlayerDurationParserProvider.get(), metaDataAnalyzerProvider.get());
  }

  public static MediaAnalyzer_Factory create(
      Provider<DurationAnalyzer> exoPlayerDurationParserProvider,
      Provider<MetaDataAnalyzer> metaDataAnalyzerProvider) {
    return new MediaAnalyzer_Factory(exoPlayerDurationParserProvider, metaDataAnalyzerProvider);
  }

  public static MediaAnalyzer newMediaAnalyzer(
      DurationAnalyzer exoPlayerDurationParser, MetaDataAnalyzer metaDataAnalyzer) {
    return new MediaAnalyzer(exoPlayerDurationParser, metaDataAnalyzer);
  }
}
