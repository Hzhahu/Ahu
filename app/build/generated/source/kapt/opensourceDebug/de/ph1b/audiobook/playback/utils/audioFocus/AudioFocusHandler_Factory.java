// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.playback.utils.audioFocus;

import android.media.AudioManager;
import android.telephony.TelephonyManager;
import dagger.internal.Factory;
import de.ph1b.audiobook.persistence.pref.Pref;
import de.ph1b.audiobook.playback.MediaPlayer;
import de.ph1b.audiobook.playback.PlayStateManager;
import javax.inject.Provider;

public final class AudioFocusHandler_Factory implements Factory<AudioFocusHandler> {
  private final Provider<AudioManager> audioManagerProvider;

  private final Provider<TelephonyManager> telephonyManagerProvider;

  private final Provider<MediaPlayer> playerProvider;

  private final Provider<PlayStateManager> playStateManagerProvider;

  private final Provider<Pref<Boolean>> resumeAfterCallPrefProvider;

  public AudioFocusHandler_Factory(
      Provider<AudioManager> audioManagerProvider,
      Provider<TelephonyManager> telephonyManagerProvider,
      Provider<MediaPlayer> playerProvider,
      Provider<PlayStateManager> playStateManagerProvider,
      Provider<Pref<Boolean>> resumeAfterCallPrefProvider) {
    this.audioManagerProvider = audioManagerProvider;
    this.telephonyManagerProvider = telephonyManagerProvider;
    this.playerProvider = playerProvider;
    this.playStateManagerProvider = playStateManagerProvider;
    this.resumeAfterCallPrefProvider = resumeAfterCallPrefProvider;
  }

  @Override
  public AudioFocusHandler get() {
    return provideInstance(
        audioManagerProvider,
        telephonyManagerProvider,
        playerProvider,
        playStateManagerProvider,
        resumeAfterCallPrefProvider);
  }

  public static AudioFocusHandler provideInstance(
      Provider<AudioManager> audioManagerProvider,
      Provider<TelephonyManager> telephonyManagerProvider,
      Provider<MediaPlayer> playerProvider,
      Provider<PlayStateManager> playStateManagerProvider,
      Provider<Pref<Boolean>> resumeAfterCallPrefProvider) {
    return new AudioFocusHandler(
        audioManagerProvider.get(),
        telephonyManagerProvider.get(),
        playerProvider.get(),
        playStateManagerProvider.get(),
        resumeAfterCallPrefProvider.get());
  }

  public static AudioFocusHandler_Factory create(
      Provider<AudioManager> audioManagerProvider,
      Provider<TelephonyManager> telephonyManagerProvider,
      Provider<MediaPlayer> playerProvider,
      Provider<PlayStateManager> playStateManagerProvider,
      Provider<Pref<Boolean>> resumeAfterCallPrefProvider) {
    return new AudioFocusHandler_Factory(
        audioManagerProvider,
        telephonyManagerProvider,
        playerProvider,
        playStateManagerProvider,
        resumeAfterCallPrefProvider);
  }

  public static AudioFocusHandler newAudioFocusHandler(
      AudioManager audioManager,
      TelephonyManager telephonyManager,
      MediaPlayer player,
      PlayStateManager playStateManager,
      Pref<Boolean> resumeAfterCallPref) {
    return new AudioFocusHandler(
        audioManager, telephonyManager, player, playStateManager, resumeAfterCallPref);
  }
}
