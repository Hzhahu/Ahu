// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.features.bookOverview;

import dagger.MembersInjector;
import de.ph1b.audiobook.persistence.pref.Pref;
import java.util.UUID;
import javax.inject.Provider;

public final class BookOverviewController_MembersInjector
    implements MembersInjector<BookOverviewController> {
  private final Provider<Pref<UUID>> currentBookIdPrefProvider;

  private final Provider<BookOverviewViewModel> viewModelProvider;

  public BookOverviewController_MembersInjector(
      Provider<Pref<UUID>> currentBookIdPrefProvider,
      Provider<BookOverviewViewModel> viewModelProvider) {
    this.currentBookIdPrefProvider = currentBookIdPrefProvider;
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<BookOverviewController> create(
      Provider<Pref<UUID>> currentBookIdPrefProvider,
      Provider<BookOverviewViewModel> viewModelProvider) {
    return new BookOverviewController_MembersInjector(currentBookIdPrefProvider, viewModelProvider);
  }

  @Override
  public void injectMembers(BookOverviewController instance) {
    injectCurrentBookIdPref(instance, currentBookIdPrefProvider.get());
    injectViewModel(instance, viewModelProvider.get());
  }

  public static void injectCurrentBookIdPref(
      BookOverviewController instance, Pref<UUID> currentBookIdPref) {
    instance.currentBookIdPref = currentBookIdPref;
  }

  public static void injectViewModel(
      BookOverviewController instance, BookOverviewViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
