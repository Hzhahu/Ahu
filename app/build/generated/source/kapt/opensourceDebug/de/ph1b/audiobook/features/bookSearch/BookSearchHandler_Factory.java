// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.features.bookSearch;

import dagger.internal.Factory;
import de.ph1b.audiobook.data.repo.BookRepository;
import de.ph1b.audiobook.persistence.pref.Pref;
import de.ph1b.audiobook.playback.PlayerController;
import java.util.UUID;
import javax.inject.Provider;

public final class BookSearchHandler_Factory implements Factory<BookSearchHandler> {
  private final Provider<BookRepository> repoProvider;

  private final Provider<PlayerController> playerProvider;

  private final Provider<Pref<UUID>> currentBookIdPrefProvider;

  public BookSearchHandler_Factory(
      Provider<BookRepository> repoProvider,
      Provider<PlayerController> playerProvider,
      Provider<Pref<UUID>> currentBookIdPrefProvider) {
    this.repoProvider = repoProvider;
    this.playerProvider = playerProvider;
    this.currentBookIdPrefProvider = currentBookIdPrefProvider;
  }

  @Override
  public BookSearchHandler get() {
    return provideInstance(repoProvider, playerProvider, currentBookIdPrefProvider);
  }

  public static BookSearchHandler provideInstance(
      Provider<BookRepository> repoProvider,
      Provider<PlayerController> playerProvider,
      Provider<Pref<UUID>> currentBookIdPrefProvider) {
    return new BookSearchHandler(
        repoProvider.get(), playerProvider.get(), currentBookIdPrefProvider.get());
  }

  public static BookSearchHandler_Factory create(
      Provider<BookRepository> repoProvider,
      Provider<PlayerController> playerProvider,
      Provider<Pref<UUID>> currentBookIdPrefProvider) {
    return new BookSearchHandler_Factory(repoProvider, playerProvider, currentBookIdPrefProvider);
  }

  public static BookSearchHandler newBookSearchHandler(
      BookRepository repo, PlayerController player, Pref<UUID> currentBookIdPref) {
    return new BookSearchHandler(repo, player, currentBookIdPref);
  }
}
