// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.injection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import de.ph1b.audiobook.covercolorextractor.CoverColorExtractor;

public final class AndroidModule_ProvideCoverColorExtractorFactory
    implements Factory<CoverColorExtractor> {
  private final AndroidModule module;

  public AndroidModule_ProvideCoverColorExtractorFactory(AndroidModule module) {
    this.module = module;
  }

  @Override
  public CoverColorExtractor get() {
    return provideInstance(module);
  }

  public static CoverColorExtractor provideInstance(AndroidModule module) {
    return proxyProvideCoverColorExtractor(module);
  }

  public static AndroidModule_ProvideCoverColorExtractorFactory create(AndroidModule module) {
    return new AndroidModule_ProvideCoverColorExtractorFactory(module);
  }

  public static CoverColorExtractor proxyProvideCoverColorExtractor(AndroidModule instance) {
    return Preconditions.checkNotNull(
        instance.provideCoverColorExtractor(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
