// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.injection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import de.ph1b.audiobook.misc.ErrorReporter;

public final class AndroidModule_ProvideErrorReporterFactory implements Factory<ErrorReporter> {
  private final AndroidModule module;

  public AndroidModule_ProvideErrorReporterFactory(AndroidModule module) {
    this.module = module;
  }

  @Override
  public ErrorReporter get() {
    return provideInstance(module);
  }

  public static ErrorReporter provideInstance(AndroidModule module) {
    return proxyProvideErrorReporter(module);
  }

  public static AndroidModule_ProvideErrorReporterFactory create(AndroidModule module) {
    return new AndroidModule_ProvideErrorReporterFactory(module);
  }

  public static ErrorReporter proxyProvideErrorReporter(AndroidModule instance) {
    return Preconditions.checkNotNull(
        instance.provideErrorReporter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
