// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.injection;

import android.content.SharedPreferences;
import com.f2prateek.rx.preferences2.RxSharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class PrefsModule_ProvideRxSharedPreferencesFactory
    implements Factory<RxSharedPreferences> {
  private final PrefsModule module;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public PrefsModule_ProvideRxSharedPreferencesFactory(
      PrefsModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    this.module = module;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public RxSharedPreferences get() {
    return provideInstance(module, sharedPreferencesProvider);
  }

  public static RxSharedPreferences provideInstance(
      PrefsModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    return proxyProvideRxSharedPreferences(module, sharedPreferencesProvider.get());
  }

  public static PrefsModule_ProvideRxSharedPreferencesFactory create(
      PrefsModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    return new PrefsModule_ProvideRxSharedPreferencesFactory(module, sharedPreferencesProvider);
  }

  public static RxSharedPreferences proxyProvideRxSharedPreferences(
      PrefsModule instance, SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNull(
        instance.provideRxSharedPreferences(sharedPreferences),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
