// Generated by Dagger (https://google.github.io/dagger).
package de.ph1b.audiobook.features.settings.dialogs;

import dagger.MembersInjector;
import de.ph1b.audiobook.persistence.pref.Pref;
import de.ph1b.audiobook.uitools.ThemeUtil;
import javax.inject.Provider;

public final class ThemePickerDialogFragment_MembersInjector
    implements MembersInjector<ThemePickerDialogFragment> {
  private final Provider<Pref<ThemeUtil.Theme>> themePrefProvider;

  public ThemePickerDialogFragment_MembersInjector(
      Provider<Pref<ThemeUtil.Theme>> themePrefProvider) {
    this.themePrefProvider = themePrefProvider;
  }

  public static MembersInjector<ThemePickerDialogFragment> create(
      Provider<Pref<ThemeUtil.Theme>> themePrefProvider) {
    return new ThemePickerDialogFragment_MembersInjector(themePrefProvider);
  }

  @Override
  public void injectMembers(ThemePickerDialogFragment instance) {
    injectThemePref(instance, themePrefProvider.get());
  }

  public static void injectThemePref(
      ThemePickerDialogFragment instance, Pref<ThemeUtil.Theme> themePref) {
    instance.themePref = themePref;
  }
}
